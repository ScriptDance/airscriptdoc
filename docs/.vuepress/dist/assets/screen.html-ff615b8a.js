import{_ as i}from"./ico_video_player-0674cff7.js";import{_ as d,r as p,o as r,c as k,d as n,e as s,b as a,w as t,a as l}from"./app-b84e2f45.js";const c="/assets/img/findcolors_ore.png",m={},v=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 包路径</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="图色检索" tabindex="-1"><a class="header-anchor" href="#图色检索" aria-hidden="true">#</a> 图色检索</h1><h2 id="图像" tabindex="-1"><a class="header-anchor" href="#图像" aria-hidden="true">#</a> 图像 <a href="https://www.bilibili.com/video/BV1HX4y1i7pf?p=20" title="视频教程" style="margin-left:5px;"><img style="width:20px;height:20px;" src="`+i+'"></a></h2>',3),h=n("b",null,"Screen",-1),b=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 所属包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Screen

<span class="token comment"># 通过Screen 操作</span>
Screen<span class="token punctuation">.</span><span class="token operator">*</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="从屏幕获取图像" tabindex="-1"><a class="header-anchor" href="#从屏幕获取图像" aria-hidden="true">#</a> 从屏幕获取图像</h3>`,2),g=n("b",null,"Screen",-1),y=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"x,y,x1,y1"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"选填"),n("td",{style:{"text-align":"right"}},"要截取的屏幕范围坐标,默认截取全屏")])])],-1),_=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"返回结果"),n("th",{style:{"text-align":"right"}},"备注")])],-1),x=n("td",{style:{"text-align":"left"}},"android.graphics.Bitmap",-1),f={style:{"text-align":"right"}},w=n("br",null,null,-1),F={href:"https://developer.android.google.cn/reference/kotlin/android/graphics/Bitmap?hl=en",target:"_blank",rel:"noopener noreferrer"},C=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Screen 
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R

<span class="token comment"># 截取整个屏幕为Bitmap对象</span>
bitmap <span class="token operator">=</span> Screen<span class="token punctuation">.</span>bitmap<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 截取屏幕范围[361,309,718,659]为Bitmap对象</span>
bitmap <span class="token operator">=</span> Screen<span class="token punctuation">.</span>bitmap<span class="token punctuation">(</span><span class="token number">361</span><span class="token punctuation">,</span><span class="token number">309</span><span class="token punctuation">,</span><span class="token number">718</span><span class="token punctuation">,</span><span class="token number">659</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 打印截取的图片宽度, 关于Bitmap的更多属性请见:https://developer.android.google.cn/reference/kotlin/android/graphics/Bitmap?hl=en</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">.</span>getWidth<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="从文件获取图像" tabindex="-1"><a class="header-anchor" href="#从文件获取图像" aria-hidden="true">#</a> 从文件获取图像</h3>`,2),R=n("b",null,"Screen",-1),E=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"path"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"图片路径地址")]),n("tr",null,[n("td",null,"sampleSize"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"选填"),n("td",{style:{"text-align":"right"}},[s("图像缩放参数"),n("br"),s("如参数为2:每隔2行,2列采集1行,结果为原图的1/4大小")])])])],-1),q=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"返回结果"),n("th",{style:{"text-align":"right"}},"备注")])],-1),B=n("td",{style:{"text-align":"left"}},"android.graphics.Bitmap",-1),D={style:{"text-align":"right"}},O=n("br",null,null,-1),I={href:"https://developer.android.google.cn/reference/kotlin/android/graphics/Bitmap?hl=en",target:"_blank",rel:"noopener noreferrer"},S=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Screen 
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R

<span class="token comment"># 将sd卡中的文件/a/3.jpg 读取为bitmap对象</span>
bitmap <span class="token operator">=</span> Screen<span class="token punctuation">.</span>file2Bitmap<span class="token punctuation">(</span>R<span class="token punctuation">.</span>sd<span class="token punctuation">(</span><span class="token string">&#39;/a/3.jpg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">.</span>getWidth<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="保存图像" tabindex="-1"><a class="header-anchor" href="#保存图像" aria-hidden="true">#</a> 保存图像</h3>`,2),Q=n("b",null,"Screen",-1),j=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"path"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"存入的路径")]),n("tr",null,[n("td",null,"bitmap"),n("td",{style:{"text-align":"center"}},"Bitmap"),n("td",{style:{"text-align":"right"}},"选填"),n("td",{style:{"text-align":"right"}},"Android 图像,默认全屏截图")]),n("tr",null,[n("td",null,"quality"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"选填"),n("td",{style:{"text-align":"right"}},"截图的清晰度 1-100,默认:100原图,20:20%原图分辨率")])])],-1),A=n("thead",null,[n("tr",null,[n("th",null,"返回结果"),n("th",{style:{"text-align":"right"}},"备注")])],-1),T=n("td",null,"java.io.File",-1),V={style:{"text-align":"right"}},z=n("br",null,null,-1),L={href:"https://tool.oschina.net/uploads/apidocs/jdk-zh/java/io/File.html",target:"_blank",rel:"noopener noreferrer"},N=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Screen 
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R

<span class="token comment"># 截取屏幕到 /sd/a/1.png 目录中</span>
cpFile <span class="token operator">=</span>  Screen<span class="token punctuation">.</span>toFile<span class="token punctuation">(</span>R<span class="token punctuation">.</span>sd<span class="token punctuation">(</span><span class="token string">&#39;/a/1.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 截取屏幕区域[10,10,500,500]到 /sd/a/2.png 目录中</span>
cpFile <span class="token operator">=</span>  Screen<span class="token punctuation">.</span>toFile<span class="token punctuation">(</span>R<span class="token punctuation">.</span>sd<span class="token punctuation">(</span><span class="token string">&#39;/a/2.jpg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Screen<span class="token punctuation">.</span>bitmap<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 截取屏幕到 /sd/a/3.png 目录中,清晰度为 50%</span>
cpFile <span class="token operator">=</span>  Screen<span class="token punctuation">.</span>toFile<span class="token punctuation">(</span>R<span class="token punctuation">.</span>sd<span class="token punctuation">(</span><span class="token string">&#39;/a/3.jpg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment"># 截取屏幕区域[10,10,500,500]到 /sd/a/4.png 目录中,清晰度为30%</span>
cpFile <span class="token operator">=</span>  Screen<span class="token punctuation">.</span>toFile<span class="token punctuation">(</span>R<span class="token punctuation">.</span>sd<span class="token punctuation">(</span><span class="token string">&#39;/a/4.jpg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Screen<span class="token punctuation">.</span>bitmap<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="找色" tabindex="-1"><a class="header-anchor" href="#找色" aria-hidden="true">#</a> 找色 <a href="https://www.bilibili.com/video/BV1HX4y1i7pf?p=21" title="视频教程" style="margin-left:5px;"><img style="width:20px;height:20px;" src="`+i+`"></a></h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> FindColors
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="构造" tabindex="-1"><a class="header-anchor" href="#构造" aria-hidden="true">#</a> 构造</h3>`,5),P=n("b",null,"FindColors",-1),H=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"colors"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},[s("颜色参数,一般使用编辑器中的找色工具生成"),n("br"),s(' 格式:"x,y,#rgb|x,y,#rgb" '),n("br"),s("颜色参数 由多组坐标与颜色 构成,每一组颜色之间用‘|’分割"),n("br"),s("例如:'426,346,#05D395|502,351,#05D015|676,569,#05D294'")])])])],-1),W=n("ul",null,[n("li",null,"找色原理:")],-1),X=n("blockquote",null,[n("p",null,[s("'426,346,#05D395|502,351,#05D015|676,569,#05D294' "),n("br"),s(" 上述含义:在#05D395这个颜色的相对位置(x=502-426,y=351-346)有一个颜色值 #05D015 "),n("br"),s("并且 "),n("br"),s(" 在#05D395这个颜色的相对位置(x=676-426,y=569-346) 存在一个颜色值 #05D294"),n("br"),n("b",null,"所有的颜色都属于第一个颜色点的定位点.")])],-1),G=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> FindColors

<span class="token comment"># 构造一个FindColor对象</span>
FindColors<span class="token punctuation">(</span><span class="token string">&#39;426,346,#05D395|502,351,#05D015|676,569,#05D294&#39;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="范围" tabindex="-1"><a class="header-anchor" href="#范围" aria-hidden="true">#</a> 范围</h3>`,2),J=n("b",null,"FindColors(colors)",-1),K=n("blockquote",null,[n("p",null,"缺省rect参数将默认全屏幕找色")],-1),M=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"x"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"左上角x坐标")]),n("tr",null,[n("td",null,"y"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"左上角y坐标")]),n("tr",null,[n("td",null,"x1"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"右下脚x坐标")]),n("tr",null,[n("td",null,"y2"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"右下脚y坐标")])])],-1),U=n("blockquote",null,[n("p",null,"一个矩形范围 由左上角坐标,和右下脚坐标来指定")],-1),Y=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# 导包"),s(`
`),n("span",{class:"token keyword"},"from"),s(" airscript"),n("span",{class:"token punctuation"},"."),s("screen "),n("span",{class:"token keyword"},"import"),s(` FindColors

`),n("span",{class:"token comment"},"# 构造一个FindColor对象,并指定找色范围[353,289,758,707]"),s(`
FindColors`),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'426,346,#05D395|502,351,#05D015|676,569,#05D294'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("rect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"353"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"289"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"758"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"707"),n("span",{class:"token punctuation"},")"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Z=n("h3",{id:"间隔",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#间隔","aria-hidden":"true"},"#"),s(" 间隔")],-1),$=n("b",null,"FindColors(colors)",-1),nn=n("blockquote",null,[n("p",null,"缺省space 默认为 5")],-1),sn=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"num"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"找色结果的间距,默认每5个像素只能存在1个结果")])])],-1),an=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# 导包"),s(`
`),n("span",{class:"token keyword"},"from"),s(" airscript"),n("span",{class:"token punctuation"},"."),s("screen "),n("span",{class:"token keyword"},"import"),s(` FindColors

`),n("span",{class:"token comment"},"# 构造一个FindColor对象,并指定找色的结果间距为 10"),s(`
FindColor`),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'931,549,#EFEFEF|932,496,#EEEEEE|964,523,#EFEFEF|862,475,#0B0B16'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("space"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),tn=n("h3",{id:"方向",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#方向","aria-hidden":"true"},"#"),s(" 方向")],-1),en=n("b",null,"FindColors(colors)",-1),ln=n("blockquote",null,[n("p",null,"缺省ori 默认为 2")],-1),on=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"num"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},[s("找色的方向,默认为2 "),n("br"),s("取值:1-8 之间,见下图")])])])],-1),pn=n("img",{src:c,style:{width:"300px",height:"260px"}},null,-1),cn=n("ul",null,[n("li",null,"1: 左上角到右下角，纵向开始找色，先找到 a 顶点。"),n("li",null,"2: 左上角到右下角，横向开始找色，先找到 b 顶点。"),n("li",null,"3: 右上角到左下角，横向开始找色，先找到 c 顶点。"),n("li",null,"依此类推")],-1),un=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# 导包"),s(`
`),n("span",{class:"token keyword"},"from"),s(" airscript"),n("span",{class:"token punctuation"},"."),s("screen "),n("span",{class:"token keyword"},"import"),s(` FindColors

`),n("span",{class:"token comment"},"# 构造一个FindColor对象,并指定找色的结果间距为 10"),s(`
FindColor`),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'931,549,#EFEFEF|932,496,#EEEEEE|964,523,#EFEFEF|862,475,#0B0B16'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("ori"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),dn=n("h3",{id:"偏色",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#偏色","aria-hidden":"true"},"#"),s(" 偏色")],-1),rn=n("b",null,"FindColors(colors)",-1),kn=n("blockquote",null,[n("p",null,"缺省ori 默认为 2")],-1),mn=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"rgb"),n("td",{style:{"text-align":"center"}},"string(rgb颜色值)"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"如‘#050505’")])])],-1),vn=n("img",{src:c,style:{width:"300px",height:"260px"}},null,-1),hn=n("ul",null,[n("li",null,"1: 左上角到右下角，纵向开始找色，先找到 a 顶点。"),n("li",null,"2: 左上角到右下角，横向开始找色，先找到 b 顶点。"),n("li",null,"3: 右上角到左下角，横向开始找色，先找到 c 顶点。"),n("li",null,"依此类推")],-1),bn=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# 导包"),s(`
`),n("span",{class:"token keyword"},"from"),s(" airscript"),n("span",{class:"token punctuation"},"."),s("screen "),n("span",{class:"token keyword"},"import"),s(` FindColors

`),n("span",{class:"token comment"},"# 构造一个FindColor对象,并指定找色的结果间距为 10"),s(`
FindColor`),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'931,549,#EFEFEF|932,496,#EEEEEE|964,523,#EFEFEF|862,475,#0B0B16'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("ori"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),gn=n("h3",{id:"查找一个结果",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#查找一个结果","aria-hidden":"true"},"#"),s(" 查找一个结果")],-1),yn=n("b",null,"FindColors(colors)",-1),_n=l(`<table><thead><tr><th>返回结果</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>android.graphics.Point</td><td style="text-align:right;">点位对象, Point有x和y属性.用来获取坐标位置.</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> FindColors

<span class="token comment"># 构造一个FindColor对象,并执行查找</span>
point <span class="token operator">=</span> FindColors<span class="token punctuation">(</span><span class="token string">&#39;931,549,#EFEFEF|932,496,#EEEEEE|964,523,#EFEFEF|862,475,#0B0B16&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> point<span class="token punctuation">:</span>
    <span class="token comment"># 打印 x坐标 和 y坐标</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>x<span class="token punctuation">,</span>point<span class="token punctuation">.</span>y<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查找全部结果" tabindex="-1"><a class="header-anchor" href="#查找全部结果" aria-hidden="true">#</a> 查找全部结果</h3>`,3),xn=n("b",null,"FindColors(colors)",-1),fn=l(`<table><thead><tr><th>返回结果</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>android.graphics.Point[]</td><td style="text-align:right;">点位对象数组,Point有x和y属性.可用来获取坐标位置.</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> FindColors

<span class="token comment"># 构造一个FindColor对象,并执行查找</span>
points <span class="token operator">=</span> FindColors<span class="token punctuation">(</span><span class="token string">&#39;931,549,#EFEFEF|932,496,#EEEEEE|964,523,#EFEFEF|862,475,#0B0B16&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> points<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;共查到%d个结果&#39;</span><span class="token operator">%</span><span class="token builtin">len</span><span class="token punctuation">(</span>points<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> point <span class="token keyword">in</span> points<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>x<span class="token punctuation">,</span>point<span class="token punctuation">.</span>y<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="找图" tabindex="-1"><a class="header-anchor" href="#找图" aria-hidden="true">#</a> 找图</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> FindImages
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>通过局部图片,我们可以在屏幕中找到该图片的位置信息</p><ul><li>找图支持全分辨率.(局部图片尺寸不变,屏幕如何缩放,均可以找到位置信息)</li></ul><div class="custom-container tip"><p class="custom-container-title">什么时候用找图合适</p><p>当我们想适配全分辨率时,可通过找图方法.</p></div><h3 id="构造-1" tabindex="-1"><a class="header-anchor" href="#构造-1" aria-hidden="true">#</a> 构造</h3>`,8),wn=n("b",null,"FindImages",-1),Fn=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"part_img"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"局部图片的绝对路径")])])],-1),Cn=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> FindImages

<span class="token comment"># 导入上下文环境包,方便导入图片地址</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R

<span class="token comment"># 构造一个FindColor对象,需要传入一个局部图片的路径</span>

<span class="token comment"># 通过上下文R得到a.png的绝对位置</span>
path <span class="token operator">=</span> R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>res<span class="token punctuation">(</span><span class="token string">&quot;/img/a.png&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 将路径传入FindImages 构建一个找图对象</span>
FindImages<span class="token punctuation">(</span>path<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="范围-1" tabindex="-1"><a class="header-anchor" href="#范围-1" aria-hidden="true">#</a> 范围</h3>`,2),Rn=n("b",null,"FindImages(part_img).",-1),En=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"l"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"范围左上角x坐标")]),n("tr",null,[n("td",null,"r"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"范围左上角y坐标")]),n("tr",null,[n("td",null,"t"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"范围右上角x坐标")]),n("tr",null,[n("td",null,"b"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"范围右上角y坐标")])])],-1),qn=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> FindImages

<span class="token comment"># 导入上下文环境包,方便导入图片地址</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R

<span class="token comment"># 构造一个FindColor对象,需要传入一个局部图片的路径</span>

<span class="token comment"># 通过上下文R得到a.png的绝对位置</span>
path <span class="token operator">=</span> R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>res<span class="token punctuation">(</span><span class="token string">&quot;/img/a.png&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 将路径传入FindImages 构建一个找图对象,并指定查找图的范围 是[0,0,300,300]</span>
FindImages<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span>rect<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="信心" tabindex="-1"><a class="header-anchor" href="#信心" aria-hidden="true">#</a> 信心</h3>`,2),Bn=n("b",null,"FindImages(part_img).",-1),Dn=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"num"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"可信度,0-1之间的一个值,1为100%准确,0.8为80%的准确度,这个值可以过滤掉准确度低的结果")])])],-1),On=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> FindImages

<span class="token comment"># 导入上下文环境包,方便导入图片地址</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R

<span class="token comment"># 构造一个FindColor对象,需要传入一个局部图片的路径</span>

<span class="token comment"># 通过上下文R得到a.png的绝对位置</span>
path <span class="token operator">=</span> R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>res<span class="token punctuation">(</span><span class="token string">&quot;/img/a.png&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 将路径传入FindImages 构建一个找图对象,并指定要获取的结果准确度必须0.8以上.</span>
FindImages<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span>confidence<span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查找模式" tabindex="-1"><a class="header-anchor" href="#查找模式" aria-hidden="true">#</a> 查找模式</h3>`,2),In=n("p",null,"查找模式,主要分为模版查找,全分辨率查找,混合查找",-1),Sn=n("p",null,"开发者可以根据场景需求使用不同的模式.",-1),Qn=l('<ul><li>返回一个结果</li></ul><table><thead><tr><th>查找模式</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td>find</td><td style="text-align:left;">先使用 find_template 查找,如果找不到在用 find_sift 查找</td></tr><tr><td>find_sift</td><td style="text-align:left;">支持全分辨率的单图查找模式 优点:全分辨率 缺点:速度慢</td></tr><tr><td>find_template</td><td style="text-align:left;">优点:速度快 缺点:不支持全分辨率</td></tr></tbody></table><ul><li>查找多个结果</li></ul><table><thead><tr><th>查找模式</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td>find_all</td><td style="text-align:left;">先使用 find_all_template 查找,如果找不到在用 find_all_sift 查找</td></tr><tr><td>find_all_sift</td><td style="text-align:left;">持全分辨率的查找模式 优点:全分辨率 缺点:速度慢</td></tr><tr><td>find_all_template</td><td style="text-align:left;">优点:速度快 缺点:不支持全分辨率</td></tr></tbody></table><h3 id="查找一个结果-1" tabindex="-1"><a class="header-anchor" href="#查找一个结果-1" aria-hidden="true">#</a> 查找一个结果</h3>',5),jn=n("b",null,"FindImages(part_img).",-1),An=n("hr",null,null,-1),Tn=n("b",null,"FindImages(part_img).",-1),Vn=n("hr",null,null,-1),zn=n("b",null,"FindImages(part_img).",-1),Ln=n("hr",null,null,-1),Nn=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"返回结果"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"Object"),n("td",{style:{"text-align":"right"}},"结果对象")])])],-1),Pn=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token comment"},"//结果对象案例"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
    'result'`),n("span",{class:"token operator"},":"),s(" ("),n("span",{class:"token number"},"929.0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"535.0"),s(")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"//找到图片在屏幕上的中心点坐标"),s(`
    'rectangle'`),n("span",{class:"token operator"},":"),s(" (("),n("span",{class:"token number"},"832"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"437"),s(")"),n("span",{class:"token punctuation"},","),s(" ("),n("span",{class:"token number"},"832"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"633"),s(")"),n("span",{class:"token punctuation"},","),s(" ("),n("span",{class:"token number"},"1026"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"437"),s(")"),n("span",{class:"token punctuation"},","),s(" ("),n("span",{class:"token number"},"1026"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"633"),s("))"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"//图片在屏幕中的范围,4个顶点的坐标"),s(`
    'confidence'`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0.9975173473358154"),s(),n("span",{class:"token comment"},"//可信度"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Hn=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> FindImages
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R


<span class="token comment"># 构造找图对象,并执行查找</span>
res <span class="token operator">=</span> FindImages<span class="token punctuation">(</span>R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>res<span class="token punctuation">(</span><span class="token string">&quot;/img/a.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 先使用 find_template找不到结果,在用find_sift查询</span>

<span class="token comment"># res = FindImages(R(__file__).res(&quot;/img/a.png&quot;)).find_sift() #  全分辨率形式查询</span>

<span class="token comment"># res = FindImages(R(__file__).res(&quot;/img/a.png&quot;)).find_template() #  模版查询,速度快,但不支持全分辨率</span>

<span class="token comment">#判断结果不为空</span>
<span class="token keyword">if</span> res<span class="token punctuation">:</span>
    <span class="token comment">#输入找图结果的属性</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;中心坐标为:x=%d,y=%d&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token string">&#39;result&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>res<span class="token punctuation">[</span><span class="token string">&#39;result&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;范围:&quot;</span><span class="token punctuation">,</span>res<span class="token punctuation">[</span><span class="token string">&quot;rectangle&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;准确度:&quot;</span><span class="token punctuation">,</span>res<span class="token punctuation">[</span><span class="token string">&quot;confidence&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查找所有结果" tabindex="-1"><a class="header-anchor" href="#查找所有结果" aria-hidden="true">#</a> 查找所有结果</h3>`,2),Wn=n("b",null,"FindImages(part_img).",-1),Xn=n("hr",null,null,-1),Gn=n("b",null,"FindImages(part_img).",-1),Jn=n("hr",null,null,-1),Kn=n("b",null,"FindImages(part_img).",-1),Mn=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"返回结果"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"Object[]"),n("td",{style:{"text-align":"right"}},"结果对象数组")])])],-1),Un=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token comment"},"//结果对象案例"),s(`
`),n("span",{class:"token punctuation"},"["),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        'result'`),n("span",{class:"token operator"},":"),s(" ("),n("span",{class:"token number"},"929.0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"535.0"),s(")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"//找到图片在屏幕上的中心点坐标"),s(`
        'rectangle'`),n("span",{class:"token operator"},":"),s(" (("),n("span",{class:"token number"},"832"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"437"),s(")"),n("span",{class:"token punctuation"},","),s(" ("),n("span",{class:"token number"},"832"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"633"),s(")"),n("span",{class:"token punctuation"},","),s(" ("),n("span",{class:"token number"},"1026"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"437"),s(")"),n("span",{class:"token punctuation"},","),s(" ("),n("span",{class:"token number"},"1026"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"633"),s("))"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"//图片在屏幕中的范围,4个顶点的坐标"),s(`
        'confidence'`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0.9975173473358154"),s(),n("span",{class:"token comment"},"//可信度"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"]"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Yn=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> FindImages
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R

<span class="token comment"># 构造找图对象,过滤掉,可信度小于0.6的 并查找全部结果</span>
ress <span class="token operator">=</span> FindImages<span class="token punctuation">(</span>R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>res<span class="token punctuation">(</span><span class="token string">&quot;/img/a.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>confidence<span class="token punctuation">(</span><span class="token number">0.6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># ress = FindImages(R(__file__).res(&quot;/img/a.png&quot;)).confidence(0.6).find_all() # 全分辨率查找模式,速度慢</span>

<span class="token comment"># ress = FindImages(R(__file__).res(&quot;/img/a.png&quot;)).confidence(0.6).find_all_template() # 模版查找模式,速度快,但不支持全分辨率</span>

<span class="token comment">#判断结果不为空</span>
<span class="token keyword">if</span> ress<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;共查到%d个结果&#39;</span><span class="token operator">%</span><span class="token builtin">len</span><span class="token punctuation">(</span>ress<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">#输入找图结果的属性</span>
    <span class="token keyword">for</span> res <span class="token keyword">in</span> ress<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;中心坐标为:x=%d,y=%d&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token string">&#39;result&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>res<span class="token punctuation">[</span><span class="token string">&#39;result&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;范围:&quot;</span><span class="token punctuation">,</span>res<span class="token punctuation">[</span><span class="token string">&quot;rectangle&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;准确度:&quot;</span><span class="token punctuation">,</span>res<span class="token punctuation">[</span><span class="token string">&quot;confidence&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="目标检测" tabindex="-1"><a class="header-anchor" href="#目标检测" aria-hidden="true">#</a> 目标检测</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> yolo_v5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>经过数据集训练,加载模型.检测出屏幕中的目标</p><h3 id="模型加载" tabindex="-1"><a class="header-anchor" href="#模型加载" aria-hidden="true">#</a> 模型加载</h3>`,5),Zn=n("b",null,"yolo_v5",-1),$n=n("p",null,"创建一个yolov5目标检测对象,并初始化模型",-1),ns=n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"left"}},"备注")])],-1),ss=n("td",null,"model",-1),as=n("td",{style:{"text-align":"center"}},"string",-1),ts=n("td",{style:{"text-align":"right"}},"必填",-1),es={style:{"text-align":"left"}},ls={href:"https://card.nspirit.cn/mlist.html",target:"_blank",rel:"noopener noreferrer"},os=n("br",null,null,-1),ps=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> yolo_v5
<span class="token comment"># 从模型库中加载</span>
yolo <span class="token operator">=</span> yolo_v5<span class="token punctuation">(</span><span class="token string">&quot;微信跳一跳:1.5&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> yolo_v5
<span class="token comment"># 从文件中加载模型()</span>
yolo <span class="token operator">=</span> yolo_v5<span class="token punctuation">(</span>R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>root<span class="token punctuation">(</span><span class="token string">&quot;as.ai&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="检测目标" tabindex="-1"><a class="header-anchor" href="#检测目标" aria-hidden="true">#</a> 检测目标</h3>`,3),is=n("b",null,"yolo_v5(model).",-1),cs=l(`<p>检测屏幕中的所有目标</p><table><thead><tr><th>返回结果</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>Obj[]</td><td style="text-align:right;">结果对象数组</td></tr></tbody></table><table><thead><tr><th>Obj属性</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>x</td><td style="text-align:right;">目标的x坐标</td></tr><tr><td>y</td><td style="text-align:right;">目标的y坐标</td></tr><tr><td>w</td><td style="text-align:right;">目标的宽度</td></tr><tr><td>w</td><td style="text-align:right;">目标的高度</td></tr><tr><td>label</td><td style="text-align:right;">目标名称</td></tr><tr><td>prob</td><td style="text-align:right;">准确度,(0-1之间,1为100%准确)</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> yolo_v5
<span class="token comment"># 从模型库中加载</span>
yolo <span class="token operator">=</span> yolo_v5<span class="token punctuation">(</span><span class="token string">&quot;微信跳一跳:1.5&quot;</span><span class="token punctuation">)</span>

res <span class="token operator">=</span> yolo<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> res<span class="token punctuation">:</span>
    <span class="token comment">#打印检测结果</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模型训练" tabindex="-1"><a class="header-anchor" href="#模型训练" aria-hidden="true">#</a> 模型训练</h3><p>模型训练 有很多种方式</p>`,6),us=l(`<h2 id="文字识别" tabindex="-1"><a class="header-anchor" href="#文字识别" aria-hidden="true">#</a> 文字识别</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Ocr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>将屏幕中的文字识别出来</p><h3 id="构造-2" tabindex="-1"><a class="header-anchor" href="#构造-2" aria-hidden="true">#</a> 构造</h3>`,4),ds=n("b",null,"Ocr",-1),rs=l(`<p>创建一个文字识别对象</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Ocr

<span class="token comment"># 创建一个中英文识别对象</span>
Ocr<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="范围-2" tabindex="-1"><a class="header-anchor" href="#范围-2" aria-hidden="true">#</a> 范围</h3>`,3),ks=n("b",null,"Ocr()",-1),ms=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"x,y,x1,y1"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"分别是区域 左上角x坐标,左上角y坐标,右下角x坐标,右下脚y坐标")])])],-1),vs=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Ocr <span class="token comment"># 文字识别</span>

<span class="token comment">#创建一个文字识别对象,指定屏幕识别范围</span>
Ocr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rect<span class="token punctuation">(</span><span class="token number">182</span><span class="token punctuation">,</span><span class="token number">630</span><span class="token punctuation">,</span><span class="token number">853</span><span class="token punctuation">,</span><span class="token number">1261</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="匹配" tabindex="-1"><a class="header-anchor" href="#匹配" aria-hidden="true">#</a> 匹配</h3>`,2),hs=n("b",null,"Ocr()",-1),bs=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"regx"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},[s("匹配的正则表达式"),n("br"),s("如保留字符串中包含IT的识别结果:.*IT.*")])])])],-1),gs=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Ocr <span class="token comment"># 文字识别</span>

<span class="token comment">#,指定要匹配的结果中包含 “小程序”</span>
Ocr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>pattern<span class="token punctuation">(</span><span class="token string">&quot;.*小程序.*&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="最大边" tabindex="-1"><a class="header-anchor" href="#最大边" aria-hidden="true">#</a> 最大边</h3>`,2),ys=n("b",null,"Ocr()",-1),_s=n("p",null,"最大边越小,识别速度越快,但识别准确度越低",-1),xs=n("p",null,"最大边越大,识别速度越慢.但识别准确度越高",-1),fs=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"max"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"如果指定最大边时,如1200,那么所有输入资源都会同比缩放最大边至1200px,再传入引擎识别")])])],-1),ws=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Ocr <span class="token comment"># 文字识别</span>

<span class="token comment">#指定所有输入资源 最大边缩放至1200px 后再识别</span>
Ocr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>max_side_len<span class="token punctuation">(</span><span class="token number">1200</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="精度" tabindex="-1"><a class="header-anchor" href="#精度" aria-hidden="true">#</a> 精度</h3>`,2),Fs=n("b",null,"Ocr()",-1),Cs=n("p",null,"精度低则识别度低,速度快",-1),Rs=n("p",null,"精度高则识别度高,速度慢",-1),Es=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"num"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"精度有16(默认) 和 8")])])],-1),qs=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Ocr <span class="token comment"># 文字识别</span>

<span class="token comment"># 设置识别精度为16</span>
Ocr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>precision<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="从bitmap识别" tabindex="-1"><a class="header-anchor" href="#从bitmap识别" aria-hidden="true">#</a> 从Bitmap识别</h3>`,2),Bs=n("b",null,"Ocr()",-1),Ds=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"bitm"),n("td",{style:{"text-align":"center"}},"Bitmap"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"该Bitmap 可以从Screen().bitmap()获取")])])],-1),Os=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Ocr<span class="token punctuation">,</span> Screen

Ocr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bitmap<span class="token punctuation">(</span>Screen<span class="token punctuation">.</span>bitmap<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="从文件识别" tabindex="-1"><a class="header-anchor" href="#从文件识别" aria-hidden="true">#</a> 从文件识别</h3>`,2),Is=n("b",null,"Ocr()",-1),Ss=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"path"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"要识别文件的路径,可使用R.sd() 来获取SD卡中的绝对文件地址")])])],-1),Qs=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Ocr <span class="token comment"># 文字识别</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R <span class="token comment"># 文字识别</span>

<span class="token comment">#,指定要识别的文件,为当前工程下的</span>
Ocr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>sd<span class="token punctuation">(</span><span class="token string">&quot;/airscript/temp.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="识别一个结果" tabindex="-1"><a class="header-anchor" href="#识别一个结果" aria-hidden="true">#</a> 识别一个结果</h3>`,2),js=n("b",null,"Ocr()",-1),As=l(`<table><thead><tr><th style="text-align:left;">返回结果</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">OcrText</td><td style="text-align:right;">属性对象<br>具体属性 见下方代码块</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#find 返回的结果对象</span>
OcrText <span class="token punctuation">{</span>
	confidence <span class="token operator">=</span> <span class="token number">0.8111246228218079</span><span class="token punctuation">,</span> <span class="token comment"># 可信度</span>
    text <span class="token operator">=</span> <span class="token string">&#39;*才&#39;</span><span class="token punctuation">,</span>                    <span class="token comment"># 识别到文本</span>
    text_box_position <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token comment"># 识别到的文本在屏幕上的区域坐标</span>
		<span class="token punctuation">[</span><span class="token number">746</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">[</span><span class="token number">908</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">[</span><span class="token number">908</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">[</span><span class="token number">746</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">]</span>
	<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Ocr <span class="token comment"># 文字识别</span>

<span class="token comment"># 识别一个结果</span>
ot <span class="token operator">=</span>  Ocr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>ot<span class="token punctuation">)</span>
<span class="token keyword">if</span> ot<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>ot<span class="token punctuation">.</span>confidence<span class="token punctuation">)</span> <span class="token comment">#可信度</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>ot<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token comment">#识别到文本</span>
    otRect <span class="token operator">=</span> ot<span class="token punctuation">.</span>text_box_position
    <span class="token keyword">print</span><span class="token punctuation">(</span>otRect<span class="token punctuation">)</span>
    <span class="token comment"># 这里的范围是4个坐标,因为文本在屏幕上可能不是规则的矩形. 因此需要4个点位来确定区域</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>otRect<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>otRect<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 左上角顶点x,y 坐标</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>otRect<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>otRect<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 右上角顶点x,y 坐标</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>otRect<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>otRect<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 右下角顶点x,y 坐标</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>otRect<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>otRect<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 左下角顶点x,y 坐标</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="识别全部结果" tabindex="-1"><a class="header-anchor" href="#识别全部结果" aria-hidden="true">#</a> 识别全部结果</h3>`,4),Ts=n("b",null,"Ocr()",-1),Vs=l(`<table><thead><tr><th style="text-align:left;">返回结果</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">OcrText[]</td><td style="text-align:right;">属性对象数组<br>具体属性 见下方代码块</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#find 返回的结果对象</span>
<span class="token punctuation">[</span>
    OcrText <span class="token punctuation">{</span>
        confidence <span class="token operator">=</span> <span class="token number">0.8111246228218079</span><span class="token punctuation">,</span> <span class="token comment"># 可信度</span>
        text <span class="token operator">=</span> <span class="token string">&#39;小程序&#39;</span><span class="token punctuation">,</span>                    <span class="token comment"># 识别到文本</span>
        text_box_position <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token comment"># 识别到的文本在屏幕上的区域坐标</span>
            <span class="token punctuation">[</span><span class="token number">746</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span><span class="token number">908</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span><span class="token number">908</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span><span class="token number">746</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">]</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    OcrText <span class="token punctuation">{</span>
        confidence <span class="token operator">=</span> <span class="token number">0.8111246228218079</span><span class="token punctuation">,</span> <span class="token comment"># 可信度</span>
        text <span class="token operator">=</span> <span class="token string">&#39;应用&#39;</span><span class="token punctuation">,</span>                    <span class="token comment"># 识别到文本</span>
        text_box_position <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token comment"># 识别到的文本在屏幕上的区域坐标</span>
            <span class="token punctuation">[</span><span class="token number">746</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span><span class="token number">908</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span><span class="token number">908</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span><span class="token number">746</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">]</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Ocr <span class="token comment"># 文字识别</span>

<span class="token comment">#识别全部</span>
ots <span class="token operator">=</span>  Ocr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>ots<span class="token punctuation">)</span>
<span class="token keyword">if</span> ots<span class="token punctuation">:</span>
    <span class="token comment"># 循环打印出所有识别结果</span>
    <span class="token keyword">for</span> ot <span class="token keyword">in</span> ots<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>ot<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token comment">#识别到文本</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>ot<span class="token punctuation">.</span>confidence<span class="token punctuation">)</span> <span class="token comment">#可信度</span>
        otRect <span class="token operator">=</span> ot<span class="token punctuation">.</span>text_box_position
        <span class="token keyword">print</span><span class="token punctuation">(</span>otRect<span class="token punctuation">)</span>
        <span class="token comment"># 这里的范围是4个坐标,因为文本在屏幕上可能不是规则的矩形. 因此需要4个点位来确定区域</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>otRect<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>otRect<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 左上角顶点x,y 坐标</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>otRect<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>otRect<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 右上角顶点x,y 坐标</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>otRect<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>otRect<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 右下角顶点x,y 坐标</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>otRect<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>otRect<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 左下角顶点x,y 坐标</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="比色" tabindex="-1"><a class="header-anchor" href="#比色" aria-hidden="true">#</a> 比色</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> CompareColors
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>对比多个坐标点的颜色 是否与当前屏幕想符</p><div class="custom-container tip"><p class="custom-container-title">比色 和 找色</p><p>比色要比找色快很多</p></div><h3 id="构造-3" tabindex="-1"><a class="header-anchor" href="#构造-3" aria-hidden="true">#</a> 构造</h3>`,9),zs=n("b",null,"CompareColors",-1),Ls=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"colors"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},[s("颜色参数,一般使用编辑器中的比色工具生成"),n("br"),s(' 格式:"x,y,#rgb|x,y,#rgb" '),n("br"),s("颜色参数 由多组坐标与颜色 构成,每一组颜色之间用‘|’分割"),n("br"),s("例如:'426,346,#05D395|502,351,#05D015|676,569,#05D294'")])])])],-1),Ns=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> CompareColors

<span class="token comment"># 构造一个CompareColors对象</span>
CompareColors<span class="token punctuation">(</span><span class="token string">&#39;426,346,#05D395|502,351,#05D015|676,569,#05D294&#39;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="偏色-1" tabindex="-1"><a class="header-anchor" href="#偏色-1" aria-hidden="true">#</a> 偏色</h3>`,2),Ps=n("b",null,"CompareColors(colors)",-1),Hs=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"color"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},[s("一个16进制颜色的偏色值,默认为‘#050505’"),n("br"),s(" #050505 代表RGB通道分别允许5的偏差")])])])],-1),Ws=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> CompareColors

<span class="token comment"># 构造一个CompareColors对象</span>
CompareColors<span class="token punctuation">(</span><span class="token string">&#39;426,346,#05D395|502,351,#05D015|676,569,#05D294&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>diff<span class="token punctuation">(</span><span class="token string">&quot;#050505&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="重复直到成功" tabindex="-1"><a class="header-anchor" href="#重复直到成功" aria-hidden="true">#</a> 重复直到成功</h3>`,2),Xs=n("b",null,"CompareColors(colors)",-1),Gs=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> CompareColors

<span class="token comment"># 构造一个CompareColors对象,并执行比色,直到返回true为止</span>
CompareColors<span class="token punctuation">(</span><span class="token string">&#39;426,346,#05D395|502,351,#05D015|676,569,#05D294&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>until<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="异步执行" tabindex="-1"><a class="header-anchor" href="#异步执行" aria-hidden="true">#</a> 异步执行</h3>`,2),Js=n("b",null,"CompareColors(colors)",-1),Ks=l(`<table><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:right;">必须</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>method</td><td style="text-align:center;">function</td><td style="text-align:right;">必填</td><td style="text-align:right;">一个python的 回掉函数,函数必须存在一个形式参数,接收比色结果</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> CompareColors 

<span class="token comment">#比色异步回调函数</span>
<span class="token keyword">def</span> <span class="token function">compare_result</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>

<span class="token comment">#创建一个比色,并使用异步线程执行</span>
CompareColors<span class="token punctuation">(</span><span class="token string">&#39;321,1515,#4CDAAF|512,1539,#51DBB1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>asy<span class="token punctuation">(</span>compare_result<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行" tabindex="-1"><a class="header-anchor" href="#执行" aria-hidden="true">#</a> 执行</h3>`,3),Ms=n("b",null,"CompareColors(colors)",-1),Us=l(`<table><thead><tr><th style="text-align:left;">返回结果</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">boolean</td><td style="text-align:right;">比色结果,全部正确返回True,否则返回False</td></tr></tbody></table><p>-案例1: 执行比色返回结果</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> CompareColors 

<span class="token comment">#创建一个比色,同步执行比色,直到比对成功</span>
res <span class="token operator">=</span> CompareColors<span class="token punctuation">(</span><span class="token string">&#39;321,1515,#4CDAAF|512,1539,#51DBB1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>compare<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>-案例2: 异步执行比色返回结果</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> CompareColors 

<span class="token comment">#比色异步回调函数</span>
<span class="token keyword">def</span> <span class="token function">compare_result</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>

<span class="token comment">#创建一个比色,并使用异步线程执行</span>
CompareColors<span class="token punctuation">(</span><span class="token string">&#39;321,1515,#4CDAAF|512,1539,#51DBB1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>asy<span class="token punctuation">(</span>compare_result<span class="token punctuation">)</span><span class="token punctuation">.</span>compare<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>-案例3: 异步执行比色,直到比对成功后,返回结果</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> CompareColors 

<span class="token comment">#比色异步回调函数</span>
<span class="token keyword">def</span> <span class="token function">compare_result</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>

<span class="token comment">#创建一个比色,并使用异步线程执行,直到比对成功才返回结果</span>
CompareColors<span class="token punctuation">(</span><span class="token string">&#39;321,1515,#4CDAAF|512,1539,#51DBB1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>asy<span class="token punctuation">(</span>compare_result<span class="token punctuation">)</span><span class="token punctuation">.</span>until<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>compare<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>-案例4: 阻塞执行比色,直到比对成功后,返回结果</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> CompareColors 

<span class="token comment">#创建一个比色,同步执行比色,直到比对成功</span>
res <span class="token operator">=</span> CompareColors<span class="token punctuation">(</span><span class="token string">&#39;321,1515,#4CDAAF|512,1539,#51DBB1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>until<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>compare<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二维码识别" tabindex="-1"><a class="header-anchor" href="#二维码识别" aria-hidden="true">#</a> 二维码识别</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> QRcode
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>从屏幕或图片中识别二维码</p><h3 id="构造-4" tabindex="-1"><a class="header-anchor" href="#构造-4" aria-hidden="true">#</a> 构造</h3>`,13),Ys=n("b",null,"QRcode",-1),Zs=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> QRcode

<span class="token comment"># 构造一个QRcode对象</span>
QRcode<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="范围-3" tabindex="-1"><a class="header-anchor" href="#范围-3" aria-hidden="true">#</a> 范围</h3>`,2),$s=n("b",null,"QRcode()",-1),na=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"x"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"左上角x坐标")]),n("tr",null,[n("td",null,"y"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"左上角y坐标")]),n("tr",null,[n("td",null,"x1"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"右上角x坐标")]),n("tr",null,[n("td",null,"y1"),n("td",{style:{"text-align":"center"}},"int"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"右上角y坐标")])])],-1),sa=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> QRcode

<span class="token comment"># 构造一个二维码识别对象,并制定要识别的屏幕范围</span>
QRcode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rect<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="从文件识别-1" tabindex="-1"><a class="header-anchor" href="#从文件识别-1" aria-hidden="true">#</a> 从文件识别</h3>`,2),aa=n("b",null,"QRcode()",-1),ta=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"path"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"文件路径")])])],-1),ea=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> QRcode
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R

<span class="token comment"># 构造一个QRcode对象,并指定要识别的 图片文件地址</span>
QRcode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>sd<span class="token punctuation">(</span><span class="token string">&quot;1.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="从bitmap识别-1" tabindex="-1"><a class="header-anchor" href="#从bitmap识别-1" aria-hidden="true">#</a> 从Bitmap识别</h3>`,2),la=n("b",null,"QRcode()",-1),oa=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"pic"),n("td",{style:{"text-align":"center"}},"Bitmap"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"right"}},"Bitmap对象")])])],-1),pa=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> QRcode
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Screen 

<span class="token comment"># 构造一个QRcode对象,并指定要识别的内存图片</span>
QRcode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bitmap<span class="token punctuation">(</span>Screen<span class="token punctuation">.</span>bitmap<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="识别" tabindex="-1"><a class="header-anchor" href="#识别" aria-hidden="true">#</a> 识别</h3>`,2),ia=n("b",null,"QRcode()",-1),ca=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#案例1:从屏幕识别二维码</span>
<span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> QRcode

<span class="token comment"># 构造一个QRcode对象,并指定要识别的内存图片</span>
s <span class="token operator">=</span> QRcode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 打印识别的结果</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#案例2:从屏幕指定范围识别二维码</span>
<span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> QRcode

<span class="token comment"># 构造一个QRcode对象,并指定要识别的内存图片</span>
s <span class="token operator">=</span> QRcode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rect<span class="token punctuation">(</span><span class="token number">204</span><span class="token punctuation">,</span><span class="token number">739</span><span class="token punctuation">,</span><span class="token number">915</span><span class="token punctuation">,</span><span class="token number">1443</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 打印识别的结果</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#案例3:从屏幕指定文件识别二维码</span>
<span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> QRcode
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R

<span class="token comment"># 构造一个QRcode对象,并指定要识别的内存图片</span>
s <span class="token operator">=</span> QRcode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>sd<span class="token punctuation">(</span><span class="token string">&quot;2.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 打印识别的结果</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#案例4:从Bitmap 识别二维码</span>
<span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> QRcode
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> Screen

<span class="token comment"># 构造一个QRcode对象,并指定要识别的内存图片</span>
s <span class="token operator">=</span> QRcode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bitmap<span class="token punctuation">(</span>Screen<span class="token punctuation">.</span>bitmap<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 打印识别的结果</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function ua(da,ra){const e=p("font"),o=p("ExternalLinkIcon"),u=p("RouterLink");return r(),k("div",null,[v,n("p",null,[h,s("."),a(e,{color:"#3376d0"},{default:t(()=>[s("*")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("Screen 屏幕截图控制器")]),_:1}),b,n("p",null,[g,a(e,{color:"#3376d0"},{default:t(()=>[s(".bitmap(x,y,x1,y1)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("将屏幕指定区域截取为Bitmap可操作的对象")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[y,n("table",null,[_,n("tbody",null,[n("tr",null,[x,n("td",f,[s("java中的Bitmap对象,详细属性见:"),w,n("a",F,[s("https://developer.android.google.cn/reference/kotlin/android/graphics/Bitmap?hl=en"),a(o)])])])])])]),_:1}),C,n("p",null,[R,a(e,{color:"#3376d0"},{default:t(()=>[s(".file2Bitmap(path,sampleSize)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("将图片文件,读取为内存图像Bitmap")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[E,n("table",null,[q,n("tbody",null,[n("tr",null,[B,n("td",D,[s("java中的Bitmap对象,详细属性见:"),O,n("a",I,[s("https://developer.android.google.cn/reference/kotlin/android/graphics/Bitmap?hl=en"),a(o)])])])])])]),_:1}),S,n("p",null,[Q,a(e,{color:"#3376d0"},{default:t(()=>[s(".toFile(path,bitmap,quality)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("截图到指定的文件地址")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[j]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[n("table",null,[A,n("tbody",null,[n("tr",null,[T,n("td",V,[s("java中的Fiel对象,详细属性见:"),z,n("a",L,[s("https://tool.oschina.net/uploads/apidocs/jdk-zh/java/io/File.html"),a(o)])])])])])]),_:1}),N,n("p",null,[P,a(e,{color:"#3376d0"},{default:t(()=>[s("(colors)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("截图到指定的文件地址")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[H,W,X]),_:1}),G,n("p",null,[J,a(e,{color:"#3376d0"},{default:t(()=>[s(".rect(x,y,x1,y1)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("圈定要在屏幕的哪个范围内找色")]),_:1}),K,a(e,{color:"#3376d0"},{default:t(()=>[M,U,Y]),_:1}),Z,n("p",null,[$,a(e,{color:"#3376d0"},{default:t(()=>[s(".space(num)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("指定找色结果点的间距")]),_:1}),nn,a(e,{color:"#3376d0"},{default:t(()=>[sn,an]),_:1}),tn,n("p",null,[en,a(e,{color:"#3376d0"},{default:t(()=>[s(".ori(num)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("找色的方向")]),_:1}),ln,a(e,{color:"#3376d0"},{default:t(()=>[on,pn,cn,un]),_:1}),dn,n("p",null,[rn,a(e,{color:"#3376d0"},{default:t(()=>[s(".diff(rgb)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("设置偏色")]),_:1}),kn,a(e,{color:"#3376d0"},{default:t(()=>[mn,vn,hn,bn]),_:1}),gn,n("p",null,[yn,a(e,{color:"#3376d0"},{default:t(()=>[s(".find()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("查找符合特诊的第一个结果")]),_:1}),_n,n("p",null,[xn,a(e,{color:"#3376d0"},{default:t(()=>[s(".find_all()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("查找符合特诊的所有结果")]),_:1}),fn,n("p",null,[wn,a(e,{color:"#3376d0"},{default:t(()=>[s("(part_img)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("创建一个找图对象")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[Fn]),_:1}),Cn,n("p",null,[Rn,a(e,{color:"#3376d0"},{default:t(()=>[s("rect(l,t,r,b)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("指定屏幕找图范围")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[En]),_:1}),qn,n("p",null,[Bn,a(e,{color:"#3376d0"},{default:t(()=>[s("confidence(num)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("指定找图结果的可信度,过滤掉可信度低的结果")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[Dn]),_:1}),On,a(e,{color:"#3376d0"},{default:t(()=>[In,Sn]),_:1}),Qn,n("p",null,[jn,a(e,{color:"#3376d0"},{default:t(()=>[s("find()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("执行查找一个结果,可信度最高的将被保留,先使用模版查找,如找不到在用全分辨率查找")]),_:1}),An,n("p",null,[Tn,a(e,{color:"#3376d0"},{default:t(()=>[s("find_sift()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("执行查找一个结果,全分辨率查,速度慢.但支持全分辨率")]),_:1}),Vn,n("p",null,[zn,a(e,{color:"#3376d0"},{default:t(()=>[s("find_template()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("执行查找一个结果,速度快,但不支持全分辨率")]),_:1}),Ln,a(e,{color:"#3376d0"},{default:t(()=>[Nn,Pn]),_:1}),Hn,n("p",null,[Wn,a(e,{color:"#3376d0"},{default:t(()=>[s("find_all()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("混合查找,先使用模版查找,如果找不到就用全分辨率查找")]),_:1}),Xn,n("p",null,[Gn,a(e,{color:"#3376d0"},{default:t(()=>[s("find_all_sift()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("全分辨率查找,速度慢")]),_:1}),Jn,n("p",null,[Kn,a(e,{color:"#3376d0"},{default:t(()=>[s("find_all_template()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("模版查找,速度快,但不支持全分辨率")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[Mn,Un]),_:1}),Yn,n("p",null,[Zn,a(e,{color:"#3376d0"},{default:t(()=>[s("(model)")]),_:1})]),$n,n("table",null,[ns,n("tbody",null,[n("tr",null,[ss,as,ts,n("td",es,[s("从"),n("a",ls,[s("模型库"),a(o)]),s(' 中加载:("模型名称:模型版本号")'),os,s("也可加载模型文件,填写文件路径即可.")])])])]),ps,n("p",null,[is,a(e,{color:"#3376d0"},{default:t(()=>[s("find_all()")]),_:1})]),cs,n("p",null,[a(u,{to:"/airapi/yolo/yolo_learn.html"},{default:t(()=>[s("点这里,学习模型训练")]),_:1})]),us,n("p",null,[ds,a(e,{color:"#3376d0"},{default:t(()=>[s("()")]),_:1})]),rs,n("p",null,[ks,a(e,{color:"#3376d0"},{default:t(()=>[s(".rect(x,y,x1,y1)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("识别指定区域内的文字")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[ms]),_:1}),vs,n("p",null,[hs,a(e,{color:"#3376d0"},{default:t(()=>[s(".pattern(regx)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("识别指定区域内的文字")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[bs]),_:1}),gs,n("p",null,[ys,a(e,{color:"#3376d0"},{default:t(()=>[s(".max_side_len(max)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s(" 指定识别资源的最大边长 "),_s,xs]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[fs]),_:1}),ws,n("p",null,[Fs,a(e,{color:"#3376d0"},{default:t(()=>[s(".precision(num)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s(" 识别精度分为 16 和 8 ,默认为16 "),Cs,Rs]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[Es]),_:1}),qs,n("p",null,[Bs,a(e,{color:"#3376d0"},{default:t(()=>[s(".bitmap(bitm)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("识别指定图片中的文件")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[Ds]),_:1}),Os,n("p",null,[Is,a(e,{color:"#3376d0"},{default:t(()=>[s(".file(path)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("识别指定图片中的文件")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[Ss]),_:1}),Qs,n("p",null,[js,a(e,{color:"#3376d0"},{default:t(()=>[s(".find()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("识别一个返回结果,返回可信度最高的结果.")]),_:1}),As,n("p",null,[Ts,a(e,{color:"#3376d0"},{default:t(()=>[s(".find_all()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("识别全部")]),_:1}),Vs,n("p",null,[zs,a(e,{color:"#3376d0"},{default:t(()=>[s("(colors)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("创建一个比色对象")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[Ls]),_:1}),Ns,n("p",null,[Ps,a(e,{color:"#3376d0"},{default:t(()=>[s(".diff(color)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("创建一个比色对象")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[Hs]),_:1}),Ws,n("p",null,[Xs,a(e,{color:"#3376d0"},{default:t(()=>[s(".until()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("让比色直到成功才返回结果")]),_:1}),Gs,n("p",null,[Js,a(e,{color:"#3376d0"},{default:t(()=>[s(".asy(method)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("让比色直到成功才返回结果")]),_:1}),Ks,n("p",null,[Ms,a(e,{color:"#3376d0"},{default:t(()=>[s(".compare()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("执行比色返回结果")]),_:1}),Us,n("p",null,[Ys,a(e,{color:"#3376d0"},{default:t(()=>[s("()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("创建一个二维码识别对象")]),_:1}),Zs,n("p",null,[$s,a(e,{color:"#3376d0"},{default:t(()=>[s(".rect(x,y,x1,y1)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("指定识别的屏幕范围")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[na]),_:1}),sa,n("p",null,[aa,a(e,{color:"#3376d0"},{default:t(()=>[s(".file(path)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("指定识别的屏幕范围")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[ta]),_:1}),ea,n("p",null,[la,a(e,{color:"#3376d0"},{default:t(()=>[s(".bitmap(pic)")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("指定识别的屏幕范围")]),_:1}),a(e,{color:"#3376d0"},{default:t(()=>[oa]),_:1}),pa,n("p",null,[ia,a(e,{color:"#3376d0"},{default:t(()=>[s(".find()")]),_:1})]),a(e,{color:"#3376d0"},{default:t(()=>[s("识别二维码并返回结果")]),_:1}),ca])}const va=d(m,[["render",ua],["__file","screen.html.vue"]]);export{va as default};
