import{_ as t,r as i,o,c as p,d as s,e as a,b as l,a as n}from"./app-87f97072.js";const c="/assets/image-3-6b5e091e.png",r="/assets/image-1-a91f1fd0.png",d="/assets/image-fb066d94.png",u="/assets/image-2-290624ed.png",m="/assets/image-4-04dc31fc.png",h="/assets/image-5-cd8b1c2d.png",v="/assets/image-7-137fc165.png",g="/assets/image-8-c8f1fb1f.png",b="/assets/image-9-639e0dad.png",k="/assets/image-11-9b5e33dc.png",x="/assets/image-10-9074e436.png",_="/assets/image-12-e5d1e2f8.png",f={},y=n(`<h1 id="yolov5-模型训练" tabindex="-1"><a class="header-anchor" href="#yolov5-模型训练" aria-hidden="true">#</a> yolov5 模型训练</h1><p>yolov5 是一个优秀的开源目标检测模型.</p><p>我们在AS中集成了它, 版本为 yolov5s-3.0</p><p>模型训练分为两个步骤:</p><ul><li><ol><li>数据集标注</li></ol></li><li><ol start="2"><li>训练</li></ol></li></ul><p>接下来,我们通过文档的形式,详细来了解如何完成这两个步骤.</p><h2 id="数据集格式" tabindex="-1"><a class="header-anchor" href="#数据集格式" aria-hidden="true">#</a> 数据集格式</h2><p>如果您使用AS提供的标注工具,标注后将自动生成如下格式的数据包.</p><h3 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h3><div class="custom-container warning"><p class="custom-container-title">数据集格式必须如下</p><ul><li>如果您想通过AS服务器 或者 AS提供的镜像 训练模型</li></ul><p>那么数据集必须包含以下3个部分(images,labels,tag.txt)</p></div><ul><li>images 用于存放图片</li></ul><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code> &gt; images下图片格式没有要求, jpg,jpeg,png 都可以
 &gt; 文件名称:无要求
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>labels 用于存放 图片对应的标签,格式如下:</li></ul><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>0 0.30974264705882354 0.52625 0.07169117647058823 0.09
1 0.7256433823529411 0.453125 0.4163602941176471 0.11291666666666667
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>tags 用于存放标签名称列表</li></ul><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>nc: 5
names: [&quot;小人&quot;,&quot;方块&quot;,&quot;圆形&quot;,&quot;唱片机&quot;,&quot;杯子&quot;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如图:</p><img src="`+c+'" alt="Image" style="width:260px;height:auto;"><h2 id="标注" tabindex="-1"><a class="header-anchor" href="#标注" aria-hidden="true">#</a> 标注</h2><p>打开WEB编辑器 - 工具栏 - yolo目标检测 -标注训练</p><p><img src="'+r+'" alt="Alt text"></p><h3 id="创建标注集" tabindex="-1"><a class="header-anchor" href="#创建标注集" aria-hidden="true">#</a> 创建标注集</h3><p><img src="'+d+'" alt="Alt text"></p><h3 id="截屏-上传存入标注库" tabindex="-1"><a class="header-anchor" href="#截屏-上传存入标注库" aria-hidden="true">#</a> 截屏/上传存入标注库</h3><p><img src="'+u+'" alt="Alt text"></p><h3 id="打标签" tabindex="-1"><a class="header-anchor" href="#打标签" aria-hidden="true">#</a> 打标签</h3><p>理论来讲, 在数据集中图片越多,训练的结果识别效果越好.</p><p>因此我们尽可能的要在不同的图片中多打标签.</p><p>同一个目标,用相同的标签名称即可.</p><p><img src="'+m+'" alt="Alt text"></p><h3 id="疯狂打标签" tabindex="-1"><a class="header-anchor" href="#疯狂打标签" aria-hidden="true">#</a> 疯狂打标签</h3><p>图片越多越好,搞多多滴</p><p><img src="'+h+'" alt="Alt text"></p><h3 id="导出标注集" tabindex="-1"><a class="header-anchor" href="#导出标注集" aria-hidden="true">#</a> 导出标注集</h3><p>标注工具 - 工具栏 - 导出并训练</p><p>按照这个步骤操作,你会得到 一个 cnp文件(数据集的压缩包)</p><p><img src="'+v+'" alt="Alt text"></p><h2 id="训练" tabindex="-1"><a class="header-anchor" href="#训练" aria-hidden="true">#</a> 训练</h2><p>训练分为两种模式</p><p>AirScript 提供的云服务训练</p><p>自建服务器训练</p><h3 id="as服务器训练" tabindex="-1"><a class="header-anchor" href="#as服务器训练" aria-hidden="true">#</a> AS服务器训练</h3>',42),A={href:"http://py.airscript.cn/admin/model/list/create",target:"_blank",rel:"noopener noreferrer"},q=n('<p>填写信息,上传cnp数据集,点击提交.等待训练结果.</p><p><img src="'+g+'" alt="Alt text"></p><p>等待训练成功,即可加载使用了(50图左右,需训练30分钟左右)</p><p><img src="'+b+`" alt="Alt text"></p><h4 id="训练完成后加载" tabindex="-1"><a class="header-anchor" href="#训练完成后加载" aria-hidden="true">#</a> 训练完成后加载</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> airscript<span class="token punctuation">.</span>screen <span class="token keyword">import</span> yolo_v5
<span class="token comment"># 注意,这里的 ‘微信跳一跳’就是训练的模型名称,1.5是模型的版本(需替换成你自己的模型与版本)</span>
yolo <span class="token operator">=</span> yolo_v5<span class="token punctuation">(</span><span class="token string">&quot;微信跳一跳:1.5&quot;</span><span class="token punctuation">)</span>
res <span class="token operator">=</span> yolo<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> r <span class="token keyword">in</span> res<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="大数据集训练-自建服务器" tabindex="-1"><a class="header-anchor" href="#大数据集训练-自建服务器" aria-hidden="true">#</a> 大数据集训练(自建服务器)</h3><p>大数据集,一般只1000张图以上的数据集.</p><p>这时候我AS的服务器训练会比较慢,各位开发者可以自行搭建服务器.</p><p>AS 提供 阿里云训练镜像给各位开发者.</p><p>1.获取镜像文件</p><p>&quot;您需要先获得阿里云的账号ID,然后联系我们的客服企业微信,进行分享.&quot;</p><p><img src="`+k+'" alt="Alt text"></p><p>客服企业微信</p><img src="'+x+'" alt="Image" style="width:200px;height:auto;"><ol start="2"><li>根据服务器镜像,创建 实例.</li></ol><p><img src="'+_+`" alt="Alt text"></p><ol start="3"><li>模型训练服务器使用前准备</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token comment">#从宿主机进入到模型训练容器</span>
<span class="token punctuation">[</span>root@test <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment"># dockerexec -ite8d4e63b8c6d /bin/bash</span>

<span class="token comment">#启动cron服务</span>
<span class="token punctuation">[</span>root@e8d4e63b8c6d<span class="token punctuation">:</span><span class="token operator">/</span>usr<span class="token operator">/</span>src<span class="token operator">/</span>app<span class="token comment"># /etc/init.d/cron start</span>
<span class="token operator">*</span> Starting periodic command scheduler cron

<span class="token comment">#返回宿主机</span>
<span class="token punctuation">[</span>root@e8d4e63b8c6d<span class="token punctuation">:</span><span class="token operator">/</span>usr<span class="token operator">/</span>src<span class="token operator">/</span>app<span class="token comment"># exit</span>
 exit

<span class="token comment">#从宿主机进入到模型转换容器</span>
<span class="token punctuation">[</span>root@test <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment"># dockerexec -it 618381dfd1a9 /bin/bash</span>

<span class="token comment">#启动cron服务</span>
<span class="token punctuation">[</span>root@618381dfd1a9<span class="token punctuation">:</span><span class="token operator">/</span>usr<span class="token operator">/</span>src<span class="token operator">/</span>app<span class="token comment"># /etc/init.d/cron start</span>
 <span class="token operator">*</span> Starting periodic command scheduler cron

<span class="token comment">#返回宿主机</span>
<span class="token punctuation">[</span>root@618381dfd1a9<span class="token punctuation">:</span><span class="token operator">/</span>usr<span class="token operator">/</span>src<span class="token operator">/</span>app<span class="token comment"># exit</span>
exit
<span class="token punctuation">[</span>root@test <span class="token operator">~</span><span class="token punctuation">]</span><span class="token comment">#</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>进入管理后台,开始上传训练</li></ol><ul><li>http://你服务域名</li><li>账号： test</li><li>密码： test</li></ul>`,21);function S(w,I){const e=i("ExternalLinkIcon");return o(),p("div",null,[y,s("p",null,[a("前往 "),s("a",A,[a("开发者后台"),l(e)]),a(" 新增模型训练")]),q])}const E=t(f,[["render",S],["__file","yolo_learn.html.vue"]]);export{E as default};
