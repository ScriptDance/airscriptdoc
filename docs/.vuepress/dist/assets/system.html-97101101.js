import{_ as i,r as d,o as p,c as o,a as n,d as s,b as t,w as e,e as l}from"./app-a9e35f91.js";const c={},r=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="系统" tabindex="-1"><a class="header-anchor" href="#系统" aria-hidden="true">#</a> 系统</h1><h2 id="打印" tabindex="-1"><a class="header-anchor" href="#打印" aria-hidden="true">#</a> 打印</h2><p>print(msg...)</p><p>打印函数 延用 Python 基础打印函数 print</p><h3 id="打印回调" tabindex="-1"><a class="header-anchor" href="#打印回调" aria-hidden="true">#</a> 打印回调</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system<span class="token punctuation">.</span>out <span class="token keyword">import</span> Print
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>静态方法</li></ul>`,8),u=l(`<p>当调用 print 后,回调函数回返回print日志的json字符串</p><table><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:right;">必须</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td>py function</td><td style="text-align:center;">python函数</td><td style="text-align:right;">必填</td><td style="text-align:left;">python 函数 必须定义一个形参来接收数据</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">printListener</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">#这是print 的回调函数</span>
    <span class="token comment">#obj 是返回的json数据对象.</span>

Print<span class="token punctuation">.</span>listen<span class="token punctuation">(</span>printListener<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="环境与资源" tabindex="-1"><a class="header-anchor" href="#环境与资源" aria-hidden="true">#</a> 环境与资源</h2><p>R</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当前工程环境</p><h3 id="sd卡路径" tabindex="-1"><a class="header-anchor" href="#sd卡路径" aria-hidden="true">#</a> SD卡路径</h3><ul><li>静态方法</li></ul>`,9),v=n("p",null,"获取SD卡路径,在Android系统中,我们对SD具有访问权限.大多数时候,会把文件存入SD卡",-1),m=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"left"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"childpath"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"选填"),n("td",{style:{"text-align":"left"}},"sd卡下的子目录.默认返回SD卡根目录")])])],-1),h=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"返回结果"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"string"),n("td",{style:{"text-align":"right"}},"sd卡文件的绝对路径")])])],-1),k=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R

<span class="token comment">#获取SD卡根路径 绝对路径</span>
path <span class="token operator">=</span> R<span class="token punctuation">.</span>sd<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token comment">#获取SD/Airscript 绝对路径</span>
path <span class="token operator">=</span> R<span class="token punctuation">.</span>sd<span class="token punctuation">(</span><span class="token string">&quot;/Airscript&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="context" tabindex="-1"><a class="header-anchor" href="#context" aria-hidden="true">#</a> context</h3><ul><li>静态方法</li></ul>`,3),b=n("p",null,"获取Android context 上下文",-1),y=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"返回结果"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"Context"),n("td",{style:{"text-align":"right"}},"在Android 环境中,很多方法需要使用 context")])])],-1),g=n("hr",null,null,-1),_=n("h3",{id:"工程目录",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#工程目录","aria-hidden":"true"},"#"),s(" 工程目录")],-1),x=n("ul",null,[n("li",null,"R成员方法")],-1),f=n("strong",null,"file",-1),w=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"left"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"childpath"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"选填"),n("td",{style:{"text-align":"left"}},"相对于根目录的子目录,默认,返回根目录")])])],-1),D=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"返回结果"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"string"),n("td",{style:{"text-align":"right"}},"绝对路径")])])],-1),M=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R

<span class="token comment">#获取当前工程根目录绝对路径</span>
path <span class="token operator">=</span> R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>root<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token comment">#获取当前工程下的__init__.py 的绝对路径</span>
path <span class="token operator">=</span> R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>root<span class="token punctuation">(</span><span class="token string">&quot;__init__.py&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="res目录" tabindex="-1"><a class="header-anchor" href="#res目录" aria-hidden="true">#</a> res目录</h3><ul><li>R成员方法</li></ul>`,3),R=n("strong",null,"file",-1),P=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"left"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"childpath"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"选填"),n("td",{style:{"text-align":"left"}},"相对于res的子目录,默认,返回资源目录")])])],-1),A=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"返回结果"),n("th",{style:{"text-align":"right"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"string"),n("td",{style:{"text-align":"right"}},"绝对路径")])])],-1),q=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R

<span class="token comment">#获取资源目录绝对路径</span>
path <span class="token operator">=</span> R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>res<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token comment">#获取资源目录下/img/a.png 的绝对路径</span>
path <span class="token operator">=</span> R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>res<span class="token punctuation">(</span><span class="token string">&quot;/img/a.png&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设备信息" tabindex="-1"><a class="header-anchor" href="#设备信息" aria-hidden="true">#</a> 设备信息</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Device
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>获取运行设备的基础信息</p><h3 id="屏幕信息" tabindex="-1"><a class="header-anchor" href="#屏幕信息" aria-hidden="true">#</a> 屏幕信息</h3>`,5),C=l(`<table><thead><tr><th>返回结果</th><th>属性</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>DisplayMetrics</td><td></td><td style="text-align:right;">屏幕信息</td></tr><tr><td></td><td>heightPixels</td><td style="text-align:right;">屏幕的高度,单位像素</td></tr><tr><td></td><td>widthPixels</td><td style="text-align:right;">屏幕的宽度,单位像素</td></tr><tr><td></td><td>density</td><td style="text-align:right;">屏幕密度</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Device

<span class="token comment"># 获取屏幕信息对象</span>
display <span class="token operator">=</span> Device<span class="token punctuation">.</span>display<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 获取屏幕高度(像素)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>display<span class="token punctuation">.</span>heightPixels<span class="token punctuation">)</span>
<span class="token comment"># 获取屏幕宽度(像素)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>display<span class="token punctuation">.</span>widthPixels<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="名称" tabindex="-1"><a class="header-anchor" href="#名称" aria-hidden="true">#</a> 名称</h3>`,3),S=l(`<table><thead><tr><th>返回结果</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>string</td><td style="text-align:right;">屏幕信息</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Device

<span class="token comment"># 获取设备名称</span>
name <span class="token operator">=</span> Device<span class="token punctuation">.</span>name<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="品牌" tabindex="-1"><a class="header-anchor" href="#品牌" aria-hidden="true">#</a> 品牌</h3>`,3),N=l(`<table><thead><tr><th>返回结果</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>string</td><td style="text-align:right;">设备信息</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Device

<span class="token comment">#设备品牌</span>
brand <span class="token operator">=</span>  Device<span class="token punctuation">.</span>brand<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>brand<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="型号" tabindex="-1"><a class="header-anchor" href="#型号" aria-hidden="true">#</a> 型号</h3>`,3),j=l(`<table><thead><tr><th>返回结果</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>string</td><td style="text-align:right;">设备信息</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Device

<span class="token comment">#获取设备型号</span>
model <span class="token operator">=</span>  Device<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="android版本" tabindex="-1"><a class="header-anchor" href="#android版本" aria-hidden="true">#</a> android版本</h3>`,3),V=l(`<table><thead><tr><th>返回结果</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>string</td><td style="text-align:right;">设备信息</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Device

<span class="token comment">#获取设备android版本</span>
sdk <span class="token operator">=</span>  Device<span class="token punctuation">.</span>sdk<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sdk<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设备版本" tabindex="-1"><a class="header-anchor" href="#设备版本" aria-hidden="true">#</a> 设备版本</h3>`,3),B=l(`<table><thead><tr><th>返回结果</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>string</td><td style="text-align:right;">设备信息</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Device

<span class="token comment">#获取设备版本</span>
version <span class="token operator">=</span>  Device<span class="token punctuation">.</span>version<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>version<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ip" tabindex="-1"><a class="header-anchor" href="#ip" aria-hidden="true">#</a> ip</h3>`,3),I=l(`<table><thead><tr><th>返回结果</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>string</td><td style="text-align:right;">设备信息</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Device

<span class="token comment">#获取设备ip</span>
ip <span class="token operator">=</span>  Device<span class="token punctuation">.</span>ip<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="当前运行信息" tabindex="-1"><a class="header-anchor" href="#当前运行信息" aria-hidden="true">#</a> 当前运行信息</h3>`,3),L=l(`<table><thead><tr><th>返回结果</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>AppInfo</td><td style="text-align:right;">该对象包含三个属性:<br>name:app的名称<br>packageName:app的包名<br>activity:当前app的activity</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Device

info <span class="token operator">=</span> Device<span class="token punctuation">.</span>currentAppInfo<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 打印,当前运行APP的名称</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
<span class="token comment"># 打印,当前运行APP的包名</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>packageName<span class="token punctuation">)</span>
<span class="token comment"># 打印,当前运行APP的页面名称</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>activity<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多媒体" tabindex="-1"><a class="header-anchor" href="#多媒体" aria-hidden="true">#</a> 多媒体</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="音量调节" tabindex="-1"><a class="header-anchor" href="#音量调节" aria-hidden="true">#</a> 音量调节</h3>`,5),E=l(`<table><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:right;">必须</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td>percent</td><td style="text-align:center;">int</td><td style="text-align:right;">必填</td><td style="text-align:left;">音量大小 1-100之间</td></tr><tr><td>type</td><td style="text-align:center;">int</td><td style="text-align:right;">可选</td><td style="text-align:left;">音量类型,默认为3,见下表</td></tr></tbody></table><ul><li>什么是音量类型?</li></ul><p>在Android 系统中,包含了很多音量类型,如 音乐,系统通知,闹钟,电话等等.不同的类型,都有自己的音量</p><p>该参数来自 android.media.AudioManager</p><table><thead><tr><th>音量类型</th><th>备注</th></tr></thead><tbody><tr><td>音乐回放即媒体音量</td><td>3</td></tr><tr><td>窗口顶部状态栏Notification</td><td>5</td></tr><tr><td>警告</td><td>4</td></tr><tr><td>铃声</td><td>2</td></tr><tr><td>系统</td><td>1</td></tr><tr><td>通话</td><td>0</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media

<span class="token comment"># 设置音乐媒体音量 为80%</span>
Media<span class="token punctuation">.</span>volume<span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media

<span class="token comment"># 设置童话音量为 60%</span>
Media<span class="token punctuation">.</span>volume<span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="语音朗读" tabindex="-1"><a class="header-anchor" href="#语音朗读" aria-hidden="true">#</a> 语音朗读</h3>`,8),T=l(`<div class="custom-container warning"><p class="custom-container-title">部分设备不支持</p><p>部分设备缺少语音库,因此不支持,如(雷电模拟器)</p></div><table><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:right;">必须</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td>text</td><td style="text-align:center;">string</td><td style="text-align:right;">必填</td><td style="text-align:left;">要朗读的文本</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media

<span class="token comment"># 文本转语音朗读出来</span>
Media<span class="token punctuation">.</span>talk<span class="token punctuation">(</span><span class="token string">&#39;自在老师你好&#39;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="播放音频" tabindex="-1"><a class="header-anchor" href="#播放音频" aria-hidden="true">#</a> 播放音频</h3>`,4),z=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"left"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"path"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"left"}},"要播放的音频文件")]),n("tr",null,[n("td",null,"callback"),n("td",{style:{"text-align":"center"}},"class"),n("td",{style:{"text-align":"right"}},"可选"),n("td",{style:{"text-align":"left"}},[s("一个回调对象"),n("br"),s(" 回调对象格式见案例")])])])],-1),F=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R 

<span class="token comment"># 播放一个音频</span>
Media<span class="token punctuation">.</span>play<span class="token punctuation">(</span>R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>res<span class="token punctuation">(</span><span class="token string">&quot;/media/y1468.wav&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 播放音频回调案例</span>
<span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R 

<span class="token keyword">class</span> <span class="token class-name">listener</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">prepare</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>player<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 获取音频时长</span>
        dur <span class="token operator">=</span> player<span class="token punctuation">.</span>getDuration<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>dur<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;准备完毕&#39;</span><span class="token punctuation">)</span>
        <span class="token comment"># 带监听器,我们需要调用start方法</span>
        player<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">completion</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;播放完毕&#39;</span><span class="token punctuation">)</span>

Media<span class="token punctuation">.</span>play<span class="token punctuation">(</span>R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>res<span class="token punctuation">(</span><span class="token string">&quot;/media/y1468.wav&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>listener<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="录制音频" tabindex="-1"><a class="header-anchor" href="#录制音频" aria-hidden="true">#</a> 录制音频</h3>`,3),G=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"left"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"path"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"left"}},"录制音频的文件放置路径,如果文件不村子啊,会自动创建")]),n("tr",null,[n("td",null,"time"),n("td",{style:{"text-align":"center"}},"class"),n("td",{style:{"text-align":"right"}},"可选"),n("td",{style:{"text-align":"left"}},"录制音频的时长,如果不填写.则直到stop调用后才停止")])])],-1),H=n("p",null,"该方法会返回一个 MediaRecoder java对象.",-1),J=n("p",null,"我们可以调用该对象的方法,控制开始录音,结束录音,设置录音时长,设置录音文件最大长度 等..",-1),K=n("p",null,"下面是该对象的常用方法:",-1),O=n("p",null,"| 常用方法 | 参数 | 备注| | ------------- |:-------------😐 -----😐:----| | prepare() | - | 再设置好所有参数后,调用该方法.| | start() | - | 开始录制音频 | | stop() | - | 结束录制音频 |",-1),Q=n("p",null,"更多方法请参阅 android.media.MediaRecorder 使用相关文档.",-1),U=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 案例: 录制音频,并在3秒后调用stop停止</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media
<span class="token keyword">import</span> time
m <span class="token operator">=</span> Media<span class="token punctuation">.</span>recode<span class="token punctuation">(</span><span class="token string">&quot;/sdcard/1.acc&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 开始录音</span>
m<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token comment"># 睡眠3秒后 停止录音</span>
time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
m<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设备震动" tabindex="-1"><a class="header-anchor" href="#设备震动" aria-hidden="true">#</a> 设备震动</h3>`,2),W=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"left"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"time"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"left"}},"震动的时长")])])],-1),X=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media

<span class="token comment"># 震动2秒</span>
Media<span class="token punctuation">.</span>vibrate<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="发送邮件" tabindex="-1"><a class="header-anchor" href="#发送邮件" aria-hidden="true">#</a> 发送邮件</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导入 smtp邮件包</span>
<span class="token keyword">import</span> smtplib

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里我们使用 Python库 smtplib 实现邮件的发送</p><h2 id="剪贴板" tabindex="-1"><a class="header-anchor" href="#剪贴板" aria-hidden="true">#</a> 剪贴板</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Clipboard
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以通过剪贴板,存入数据,与读取数据.</p><h3 id="存入" tabindex="-1"><a class="header-anchor" href="#存入" aria-hidden="true">#</a> 存入</h3>`,8),Y=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"left"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"msg"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"left"}},"存入剪贴板的数据")])])],-1),Z=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Clipboard

<span class="token comment"># 存入剪贴板</span>
Clipboard<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token string">&quot;自在老师&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="读取" tabindex="-1"><a class="header-anchor" href="#读取" aria-hidden="true">#</a> 读取</h3>`,2),$=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Clipboard

<span class="token comment"># 从剪贴板读取数据</span>
msg <span class="token operator">=</span> Clipboard<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="云控消息" tabindex="-1"><a class="header-anchor" href="#云控消息" aria-hidden="true">#</a> 云控消息</h2><p>云控消息通道</p><p>当使用官方云控发送自定义消息时,该消息通道回收到通知</p><h3 id="使用须知" tabindex="-1"><a class="header-anchor" href="#使用须知" aria-hidden="true">#</a> 使用须知</h3><div class="custom-container tip"><p class="custom-container-title">该方法需配合云控接口来使用</p><ul><li>云控接口发送自定义消息,小程序里接收相关消息</li></ul><p>如果您想建立双向通道,请使用websocket-client 连接 您自己的 ws服务器</p></div><h3 id="app消息接收" tabindex="-1"><a class="header-anchor" href="#app消息接收" aria-hidden="true">#</a> APP消息接收</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导入消息通道</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Channel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,8),nn=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"left"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"pyfunction"),n("td",{style:{"text-align":"center"}},"python 函数"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"left"}},"需要一个形式参数,作为消息回调")])])],-1),sn=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导入消息通道</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Channel

<span class="token comment"># 创建一个Python函数,作为消息通道回调</span>
<span class="token keyword">def</span> <span class="token function">airws</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>

<span class="token comment"># 建立消息回调通道</span>
Channel<span class="token punctuation">(</span>airws<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function an(tn,en){const a=d("font");return p(),o("div",null,[r,n("p",null,[s("Print"),t(a,{color:"#3376d0"},{default:e(()=>[s(".listen(py function)")]),_:1})]),u,n("p",null,[s("R"),t(a,{color:"#3376d0"},{default:e(()=>[s(".sd(childpath)")]),_:1})]),v,t(a,{color:"#3376d0"},{default:e(()=>[m]),_:1}),t(a,{color:"#3376d0"},{default:e(()=>[h]),_:1}),k,n("p",null,[s("R"),t(a,{color:"#3376d0"},{default:e(()=>[s(".context()")]),_:1})]),b,t(a,{color:"#3376d0"},{default:e(()=>[y]),_:1}),g,_,x,n("p",null,[s("R("),f,s(")"),t(a,{color:"#3376d0"},{default:e(()=>[s(".root(childpath)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("获取工程根目录(__init__.py,__init__.pyc 文件所存在的位置)")]),_:1}),t(a,{color:"#3376d0"},{default:e(()=>[w]),_:1}),t(a,{color:"#3376d0"},{default:e(()=>[D]),_:1}),M,n("p",null,[s("R("),R,s(")"),t(a,{color:"#3376d0"},{default:e(()=>[s(".res(childpath)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("获取res资源目录路径")]),_:1}),t(a,{color:"#3376d0"},{default:e(()=>[P]),_:1}),t(a,{color:"#3376d0"},{default:e(()=>[A]),_:1}),q,n("p",null,[s("Device"),t(a,{color:"#3376d0"},{default:e(()=>[s(".display()")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("获取屏显信息")]),_:1}),C,n("p",null,[s("Device"),t(a,{color:"#3376d0"},{default:e(()=>[s(".name()")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("设备名称(开发者,设备名称中显示的信息)")]),_:1}),S,n("p",null,[s("Device"),t(a,{color:"#3376d0"},{default:e(()=>[s(".brand()")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("设备品牌")]),_:1}),N,n("p",null,[s("Device"),t(a,{color:"#3376d0"},{default:e(()=>[s(".model()")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("设备型号")]),_:1}),j,n("p",null,[s("Device"),t(a,{color:"#3376d0"},{default:e(()=>[s(".sdk()")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("当前设备的Android版本")]),_:1}),V,n("p",null,[s("Device"),t(a,{color:"#3376d0"},{default:e(()=>[s(".version()")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("当前设备版本")]),_:1}),B,n("p",null,[s("Device"),t(a,{color:"#3376d0"},{default:e(()=>[s(".ip()")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("当前设备ip地址")]),_:1}),I,n("p",null,[s("Device"),t(a,{color:"#3376d0"},{default:e(()=>[s(".currentAppInfo()")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("获取设备当前运行的App信息")]),_:1}),L,n("p",null,[s("Media"),t(a,{color:"#3376d0"},{default:e(()=>[s(".volume(percent,type)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("调节音量大小(1-100)")]),_:1}),E,n("p",null,[s("Media"),t(a,{color:"#3376d0"},{default:e(()=>[s(".talk(text)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("将文本用语音朗读出来")]),_:1}),T,n("p",null,[s("Media"),t(a,{color:"#3376d0"},{default:e(()=>[s(".play(path,callback)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("播放音频文件")]),_:1}),t(a,{color:"#3376d0"},{default:e(()=>[z]),_:1}),F,n("p",null,[s("Media"),t(a,{color:"#3376d0"},{default:e(()=>[s(".recode(path,time)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("获取录制音频对象")]),_:1}),t(a,{color:"#3376d0"},{default:e(()=>[G]),_:1}),H,J,K,t(a,{color:"#3376d0"},{default:e(()=>[O,Q]),_:1}),U,n("p",null,[s("Media"),t(a,{color:"#3376d0"},{default:e(()=>[s(".vibrate(time)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("设备震动一段时间")]),_:1}),t(a,{color:"#3376d0"},{default:e(()=>[W]),_:1}),X,n("p",null,[s("Clipboard"),t(a,{color:"#3376d0"},{default:e(()=>[s(".put(msg)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("将数据存入剪贴板")]),_:1}),t(a,{color:"#3376d0"},{default:e(()=>[Y]),_:1}),Z,n("p",null,[s("Clipboard"),t(a,{color:"#3376d0"},{default:e(()=>[s(".get()")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("读取剪贴板数据")]),_:1}),$,n("p",null,[s("Channel"),t(a,{color:"#3376d0"},{default:e(()=>[s("(pyfunction)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("建立一个云控自定义 消息监听")]),_:1}),t(a,{color:"#3376d0"},{default:e(()=>[nn]),_:1}),sn])}const dn=i(c,[["render",an],["__file","system.html.vue"]]);export{dn as default};
