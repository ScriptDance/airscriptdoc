import{_ as i,r as p,o as d,c as o,d as n,e as s,b as t,w as e,a as l}from"./app-87f97072.js";const c={},r=l(`<h1 id="媒体" tabindex="-1"><a class="header-anchor" href="#媒体" aria-hidden="true">#</a> 媒体</h1><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="音量调节" tabindex="-1"><a class="header-anchor" href="#音量调节" aria-hidden="true">#</a> 音量调节</h2>`,3),u=l(`<table><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:right;">必须</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td>percent</td><td style="text-align:center;">int</td><td style="text-align:right;">必填</td><td style="text-align:left;">音量大小 1-100之间</td></tr><tr><td>type</td><td style="text-align:center;">int</td><td style="text-align:right;">可选</td><td style="text-align:left;">音量类型,默认为3,见下表</td></tr></tbody></table><ul><li>什么是音量类型?</li></ul><p>在Android 系统中,包含了很多音量类型,如 音乐,系统通知,闹钟,电话等等.不同的类型,都有自己的音量</p><p>该参数来自 android.media.AudioManager</p><table><thead><tr><th>音量类型</th><th>备注</th></tr></thead><tbody><tr><td>音乐回放即媒体音量</td><td>3</td></tr><tr><td>窗口顶部状态栏Notification</td><td>5</td></tr><tr><td>警告</td><td>4</td></tr><tr><td>铃声</td><td>2</td></tr><tr><td>系统</td><td>1</td></tr><tr><td>通话</td><td>0</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media

<span class="token comment"># 设置音乐媒体音量 为80%</span>
Media<span class="token punctuation">.</span>volume<span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media

<span class="token comment"># 设置童话音量为 60%</span>
Media<span class="token punctuation">.</span>volume<span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="语音朗读" tabindex="-1"><a class="header-anchor" href="#语音朗读" aria-hidden="true">#</a> 语音朗读</h2>`,8),m=l(`<div class="custom-container warning"><p class="custom-container-title">部分设备不支持</p><p>部分设备缺少语音库,因此不支持,如(雷电模拟器)</p></div><table><thead><tr><th>参数</th><th style="text-align:center;">类型</th><th style="text-align:right;">必须</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td>text</td><td style="text-align:center;">string</td><td style="text-align:right;">必填</td><td style="text-align:left;">要朗读的文本</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media

<span class="token comment"># 文本转语音朗读出来</span>
Media<span class="token punctuation">.</span>talk<span class="token punctuation">(</span><span class="token string">&#39;自在老师你好&#39;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="播放音频" tabindex="-1"><a class="header-anchor" href="#播放音频" aria-hidden="true">#</a> 播放音频</h2>`,4),v=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"left"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"path"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"left"}},"要播放的音频文件")]),n("tr",null,[n("td",null,"callback"),n("td",{style:{"text-align":"center"}},"class"),n("td",{style:{"text-align":"right"}},"可选"),n("td",{style:{"text-align":"left"}},[s("一个回调对象"),n("br"),s(" 回调对象格式见案例")])])])],-1),k=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R 

<span class="token comment"># 播放一个音频</span>
Media<span class="token punctuation">.</span>play<span class="token punctuation">(</span>R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>res<span class="token punctuation">(</span><span class="token string">&quot;/media/y1468.wav&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 播放音频回调案例</span>
<span class="token comment">#导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> R 

<span class="token keyword">class</span> <span class="token class-name">listener</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">prepare</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>player<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 获取音频时长</span>
        dur <span class="token operator">=</span> player<span class="token punctuation">.</span>getDuration<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>dur<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;准备完毕&#39;</span><span class="token punctuation">)</span>
        <span class="token comment"># 带监听器,我们需要调用start方法</span>
        player<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">completion</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;播放完毕&#39;</span><span class="token punctuation">)</span>

Media<span class="token punctuation">.</span>play<span class="token punctuation">(</span>R<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>res<span class="token punctuation">(</span><span class="token string">&quot;/media/y1468.wav&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>listener<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="录制音频" tabindex="-1"><a class="header-anchor" href="#录制音频" aria-hidden="true">#</a> 录制音频</h2>`,3),h=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"left"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"path"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"left"}},"录制音频的文件放置路径,如果文件不村子啊,会自动创建")]),n("tr",null,[n("td",null,"time"),n("td",{style:{"text-align":"center"}},"class"),n("td",{style:{"text-align":"right"}},"可选"),n("td",{style:{"text-align":"left"}},"录制音频的时长,如果不填写.则直到stop调用后才停止")])])],-1),y=n("p",null,"该方法会返回一个 MediaRecoder java对象.",-1),b=n("p",null,"我们可以调用该对象的方法,控制开始录音,结束录音,设置录音时长,设置录音文件最大长度 等..",-1),g=n("p",null,"下面是该对象的常用方法:",-1),_=n("p",null,"| 常用方法 | 参数 | 备注| | ------------- |:-------------😐 -----😐:----| | prepare() | - | 再设置好所有参数后,调用该方法.| | start() | - | 开始录制音频 | | stop() | - | 结束录制音频 |",-1),f=n("p",null,"更多方法请参阅 android.media.MediaRecorder 使用相关文档.",-1),x=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 案例: 录制音频,并在3秒后调用stop停止</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media
<span class="token keyword">import</span> time
m <span class="token operator">=</span> Media<span class="token punctuation">.</span>recode<span class="token punctuation">(</span><span class="token string">&quot;/sdcard/1.acc&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 开始录音</span>
m<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token comment"># 睡眠3秒后 停止录音</span>
time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
m<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设备震动" tabindex="-1"><a class="header-anchor" href="#设备震动" aria-hidden="true">#</a> 设备震动</h2>`,2),w=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"参数"),n("th",{style:{"text-align":"center"}},"类型"),n("th",{style:{"text-align":"right"}},"必须"),n("th",{style:{"text-align":"left"}},"备注")])]),n("tbody",null,[n("tr",null,[n("td",null,"time"),n("td",{style:{"text-align":"center"}},"string"),n("td",{style:{"text-align":"right"}},"必填"),n("td",{style:{"text-align":"left"}},"震动的时长")])])],-1),M=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导包</span>
<span class="token keyword">from</span> airscript<span class="token punctuation">.</span>system <span class="token keyword">import</span> Media

<span class="token comment"># 震动2秒</span>
Media<span class="token punctuation">.</span>vibrate<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发送邮件" tabindex="-1"><a class="header-anchor" href="#发送邮件" aria-hidden="true">#</a> 发送邮件</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导入 smtp邮件包</span>
<span class="token keyword">import</span> smtplib

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这里我们使用 Python库 smtplib 实现邮件的发送</p>`,4);function q(R,N){const a=p("font");return d(),o("div",null,[r,n("p",null,[s("Media"),t(a,{color:"#3376d0"},{default:e(()=>[s(".volume(percent,type)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("调节音量大小(1-100)")]),_:1}),u,n("p",null,[s("Media"),t(a,{color:"#3376d0"},{default:e(()=>[s(".talk(text)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("将文本用语音朗读出来")]),_:1}),m,n("p",null,[s("Media"),t(a,{color:"#3376d0"},{default:e(()=>[s(".play(path,callback)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("播放音频文件")]),_:1}),t(a,{color:"#3376d0"},{default:e(()=>[v]),_:1}),k,n("p",null,[s("Media"),t(a,{color:"#3376d0"},{default:e(()=>[s(".recode(path,time)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("获取录制音频对象")]),_:1}),t(a,{color:"#3376d0"},{default:e(()=>[h]),_:1}),y,b,g,t(a,{color:"#3376d0"},{default:e(()=>[_,f]),_:1}),x,n("p",null,[s("Media"),t(a,{color:"#3376d0"},{default:e(()=>[s(".vibrate(time)")]),_:1})]),t(a,{color:"#3376d0"},{default:e(()=>[s("设备震动一段时间")]),_:1}),t(a,{color:"#3376d0"},{default:e(()=>[w]),_:1}),M])}const B=i(c,[["render",q],["__file","media.html.vue"]]);export{B as default};
